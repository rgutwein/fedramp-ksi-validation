{"ast":null,"code":"// Mapping of KSIs to NIST 800-53 controls\nexport const ksiToControlsMap = {\n  \"KSI-001\": [\"AC-17(2)\", \"SC-12\", \"SC-13\", \"SC-28(1)\"],\n  \"KSI-002\": [\"IA-2(1)\", \"IA-2(2)\", \"IA-5(1)\"],\n  \"KSI-003\": [\"SC-08\", \"SC-13\"],\n  \"KSI-004\": [\"SC-28\", \"SC-28(1)\"],\n  \"KSI-005\": [\"IA-5(1)\", \"AC-2\"],\n  \"KSI-006\": [\"AC-4\", \"SC-7\"],\n  \"KSI-007\": [\"CM-6\", \"CM-8\", \"SI-7\"],\n  \"KSI-008\": [\"AU-2\", \"AU-6\", \"AU-12\", \"SI-4\"],\n  \"KSI-009\": [\"CP-9\", \"CP-10\", \"SC-28\", \"SC-28(1)\"],\n  \"KSI-010\": [\"AC-2\", \"IA-2(1)\", \"IA-2(2)\"],\n  \"KSI-011\": [\"AC-6(10)\", \"CM-6\", \"SI-7\"],\n  \"KSI-012\": [\"SC-12\", \"SC-28\"],\n  \"KSI-013\": [\"SC-7\", \"AC-4\", \"CM-7\"],\n  \"KSI-014\": [\"AC-2\", \"IA-4\", \"IA-5\"],\n  \"KSI-015\": [\"CM-6\", \"CM-7\", \"SI-2\", \"SI-7\"]\n};\n\n// KSI titles and descriptions\nexport const ksiDefinitions = {\n  \"KSI-001\": {\n    title: \"FIPS-validated encryption enabled\",\n    description: \"Systems must use FIPS 140-2 validated encryption for data protection\"\n  },\n  \"KSI-002\": {\n    title: \"MFA enabled for all users\",\n    description: \"Multi-factor authentication must be enabled for all user accounts\"\n  },\n  \"KSI-003\": {\n    title: \"TLS 1.3 enforced on external endpoints\",\n    description: \"All external endpoints must enforce TLS 1.3 for secure communications\"\n  },\n  \"KSI-004\": {\n    title: \"Encryption at rest (S3/RDS/Blob/Disks)\",\n    description: \"All storage services must implement encryption at rest\"\n  },\n  \"KSI-005\": {\n    title: \"IAM users must rotate access keys within 90 days\",\n    description: \"Access keys and credentials must be rotated at least every 90 days\"\n  },\n  \"KSI-006\": {\n    title: \"No default security groups allow inbound 0.0.0.0/0\",\n    description: \"Security groups must not allow unrestricted inbound access\"\n  },\n  \"KSI-007\": {\n    title: \"Only approved AMIs/images are used in EC2/VM deployments\",\n    description: \"Only approved and hardened machine images may be deployed\"\n  },\n  \"KSI-008\": {\n    title: \"Logging enabled for all cloud storage and compute resources\",\n    description: \"Comprehensive logging must be enabled for all cloud resources\"\n  },\n  \"KSI-009\": {\n    title: \"Backups are scheduled and encrypted\",\n    description: \"Regular backups must be performed and encrypted\"\n  },\n  \"KSI-010\": {\n    title: \"Root account login is disabled or protected by MFA\",\n    description: \"Root/admin accounts must be protected by MFA or disabled when not in use\"\n  },\n  \"KSI-011\": {\n    title: \"Containers must not run as root\",\n    description: \"Containers must use non-privileged users and not run as root\"\n  },\n  \"KSI-012\": {\n    title: \"EBS volumes and Azure disks are encrypted by default\",\n    description: \"All storage volumes must be encrypted by default\"\n  },\n  \"KSI-013\": {\n    title: \"Ports and protocols restricted to minimum necessary\",\n    description: \"Only required ports and protocols should be accessible\"\n  },\n  \"KSI-014\": {\n    title: \"All user accounts mapped to active identity providers (SSO)\",\n    description: \"User accounts should leverage central identity providers and SSO\"\n  },\n  \"KSI-015\": {\n    title: \"OS baseline hardening policies applied via automation\",\n    description: \"Operating systems must have standard hardening applied via automation\"\n  }\n};\n\n// Function to get NIST controls for a KSI\nexport const getNistControlsForKsi = ksiId => {\n  return ksiToControlsMap[ksiId] || [];\n};\n\n// Function to get all KSIs that map to a NIST control\nexport const getKsisForNistControl = controlId => {\n  return Object.keys(ksiToControlsMap).filter(ksiId => ksiToControlsMap[ksiId].includes(controlId));\n};\n\n// Control Family names for NIST 800-53\nexport const controlFamilies = {\n  \"AC\": \"Access Control\",\n  \"AU\": \"Audit and Accountability\",\n  \"AT\": \"Awareness and Training\",\n  \"CM\": \"Configuration Management\",\n  \"CP\": \"Contingency Planning\",\n  \"IA\": \"Identification and Authentication\",\n  \"IR\": \"Incident Response\",\n  \"MA\": \"Maintenance\",\n  \"MP\": \"Media Protection\",\n  \"PS\": \"Personnel Security\",\n  \"PE\": \"Physical and Environmental Protection\",\n  \"PL\": \"Planning\",\n  \"PM\": \"Program Management\",\n  \"RA\": \"Risk Assessment\",\n  \"CA\": \"Security Assessment and Authorization\",\n  \"SC\": \"System and Communications Protection\",\n  \"SI\": \"System and Information Integrity\",\n  \"SA\": \"System and Services Acquisition\"\n};\n\n// Get the family name for a control\nexport const getControlFamily = controlId => {\n  const family = controlId.split('-')[0];\n  return controlFamilies[family] || \"Unknown Family\";\n};\n\n// Get a list of all unique NIST controls across all KSIs\nexport const getAllNistControls = () => {\n  const controlSet = new Set();\n  Object.values(ksiToControlsMap).forEach(controls => {\n    controls.forEach(control => controlSet.add(control));\n  });\n  return Array.from(controlSet).sort();\n};\n\n// Get a friendly name for a KSI\nexport const getKsiTitle = ksiId => {\n  var _ksiDefinitions$ksiId;\n  return ((_ksiDefinitions$ksiId = ksiDefinitions[ksiId]) === null || _ksiDefinitions$ksiId === void 0 ? void 0 : _ksiDefinitions$ksiId.title) || ksiId;\n};","map":{"version":3,"names":["ksiToControlsMap","ksiDefinitions","title","description","getNistControlsForKsi","ksiId","getKsisForNistControl","controlId","Object","keys","filter","includes","controlFamilies","getControlFamily","family","split","getAllNistControls","controlSet","Set","values","forEach","controls","control","add","Array","from","sort","getKsiTitle","_ksiDefinitions$ksiId"],"sources":["/Users/ryangutwein/Desktop/Repos/fedramp-ksi-validation/dashboard/src/services/mappingService.js"],"sourcesContent":["// Mapping of KSIs to NIST 800-53 controls\nexport const ksiToControlsMap = {\n  \"KSI-001\": [\"AC-17(2)\", \"SC-12\", \"SC-13\", \"SC-28(1)\"],\n  \"KSI-002\": [\"IA-2(1)\", \"IA-2(2)\", \"IA-5(1)\"],\n  \"KSI-003\": [\"SC-08\", \"SC-13\"],\n  \"KSI-004\": [\"SC-28\", \"SC-28(1)\"],\n  \"KSI-005\": [\"IA-5(1)\", \"AC-2\"],\n  \"KSI-006\": [\"AC-4\", \"SC-7\"],\n  \"KSI-007\": [\"CM-6\", \"CM-8\", \"SI-7\"],\n  \"KSI-008\": [\"AU-2\", \"AU-6\", \"AU-12\", \"SI-4\"],\n  \"KSI-009\": [\"CP-9\", \"CP-10\", \"SC-28\", \"SC-28(1)\"],\n  \"KSI-010\": [\"AC-2\", \"IA-2(1)\", \"IA-2(2)\"],\n  \"KSI-011\": [\"AC-6(10)\", \"CM-6\", \"SI-7\"],\n  \"KSI-012\": [\"SC-12\", \"SC-28\"],\n  \"KSI-013\": [\"SC-7\", \"AC-4\", \"CM-7\"],\n  \"KSI-014\": [\"AC-2\", \"IA-4\", \"IA-5\"],\n  \"KSI-015\": [\"CM-6\", \"CM-7\", \"SI-2\", \"SI-7\"]\n};\n\n// KSI titles and descriptions\nexport const ksiDefinitions = {\n  \"KSI-001\": {\n    title: \"FIPS-validated encryption enabled\",\n    description: \"Systems must use FIPS 140-2 validated encryption for data protection\"\n  },\n  \"KSI-002\": {\n    title: \"MFA enabled for all users\",\n    description: \"Multi-factor authentication must be enabled for all user accounts\"\n  },\n  \"KSI-003\": {\n    title: \"TLS 1.3 enforced on external endpoints\",\n    description: \"All external endpoints must enforce TLS 1.3 for secure communications\"\n  },\n  \"KSI-004\": {\n    title: \"Encryption at rest (S3/RDS/Blob/Disks)\",\n    description: \"All storage services must implement encryption at rest\"\n  },\n  \"KSI-005\": {\n    title: \"IAM users must rotate access keys within 90 days\",\n    description: \"Access keys and credentials must be rotated at least every 90 days\"\n  },\n  \"KSI-006\": {\n    title: \"No default security groups allow inbound 0.0.0.0/0\",\n    description: \"Security groups must not allow unrestricted inbound access\"\n  },\n  \"KSI-007\": {\n    title: \"Only approved AMIs/images are used in EC2/VM deployments\",\n    description: \"Only approved and hardened machine images may be deployed\"\n  },\n  \"KSI-008\": {\n    title: \"Logging enabled for all cloud storage and compute resources\",\n    description: \"Comprehensive logging must be enabled for all cloud resources\"\n  },\n  \"KSI-009\": {\n    title: \"Backups are scheduled and encrypted\",\n    description: \"Regular backups must be performed and encrypted\"\n  },\n  \"KSI-010\": {\n    title: \"Root account login is disabled or protected by MFA\",\n    description: \"Root/admin accounts must be protected by MFA or disabled when not in use\"\n  },\n  \"KSI-011\": {\n    title: \"Containers must not run as root\",\n    description: \"Containers must use non-privileged users and not run as root\"\n  },\n  \"KSI-012\": {\n    title: \"EBS volumes and Azure disks are encrypted by default\",\n    description: \"All storage volumes must be encrypted by default\"\n  },\n  \"KSI-013\": {\n    title: \"Ports and protocols restricted to minimum necessary\",\n    description: \"Only required ports and protocols should be accessible\"\n  },\n  \"KSI-014\": {\n    title: \"All user accounts mapped to active identity providers (SSO)\",\n    description: \"User accounts should leverage central identity providers and SSO\"\n  },\n  \"KSI-015\": {\n    title: \"OS baseline hardening policies applied via automation\",\n    description: \"Operating systems must have standard hardening applied via automation\"\n  }\n};\n\n// Function to get NIST controls for a KSI\nexport const getNistControlsForKsi = (ksiId) => {\n  return ksiToControlsMap[ksiId] || [];\n};\n\n// Function to get all KSIs that map to a NIST control\nexport const getKsisForNistControl = (controlId) => {\n  return Object.keys(ksiToControlsMap).filter(ksiId => \n    ksiToControlsMap[ksiId].includes(controlId)\n  );\n};\n\n// Control Family names for NIST 800-53\nexport const controlFamilies = {\n  \"AC\": \"Access Control\",\n  \"AU\": \"Audit and Accountability\",\n  \"AT\": \"Awareness and Training\",\n  \"CM\": \"Configuration Management\",\n  \"CP\": \"Contingency Planning\",\n  \"IA\": \"Identification and Authentication\",\n  \"IR\": \"Incident Response\",\n  \"MA\": \"Maintenance\",\n  \"MP\": \"Media Protection\",\n  \"PS\": \"Personnel Security\",\n  \"PE\": \"Physical and Environmental Protection\",\n  \"PL\": \"Planning\",\n  \"PM\": \"Program Management\",\n  \"RA\": \"Risk Assessment\",\n  \"CA\": \"Security Assessment and Authorization\",\n  \"SC\": \"System and Communications Protection\",\n  \"SI\": \"System and Information Integrity\",\n  \"SA\": \"System and Services Acquisition\"\n};\n\n// Get the family name for a control\nexport const getControlFamily = (controlId) => {\n  const family = controlId.split('-')[0];\n  return controlFamilies[family] || \"Unknown Family\";\n};\n\n// Get a list of all unique NIST controls across all KSIs\nexport const getAllNistControls = () => {\n  const controlSet = new Set();\n  Object.values(ksiToControlsMap).forEach(controls => {\n    controls.forEach(control => controlSet.add(control));\n  });\n  return Array.from(controlSet).sort();\n};\n\n// Get a friendly name for a KSI\nexport const getKsiTitle = (ksiId) => {\n  return ksiDefinitions[ksiId]?.title || ksiId;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}