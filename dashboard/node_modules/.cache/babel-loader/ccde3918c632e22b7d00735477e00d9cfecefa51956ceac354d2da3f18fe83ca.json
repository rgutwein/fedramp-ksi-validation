{"ast":null,"code":"// Mapping of KSIs to NIST 800-53 controls\nexport const ksiToControlsMap = {\n  \"KSI-1\": [\"RA-5\", \"SI-3\", \"SI-7\", \"CA-8\"],\n  \"KSI-2\": [\"IA-2\", \"IA-5\", \"AC-2\", \"AC-3\"],\n  \"KSI-3\": [\"SI-2\", \"CM-7\", \"CM-8\", \"MA-6\"],\n  \"KSI-4\": [\"AC-2\", \"AC-6\", \"AC-17\", \"AC-24\"],\n  \"KSI-5\": [\"IR-4\", \"IR-5\", \"IR-6\", \"AU-6\"],\n  \"KSI-6\": [\"SC-8\", \"SC-12\", \"SC-13\", \"SC-28\"],\n  \"KSI-7\": [\"AT-1\", \"AT-2\", \"AT-3\", \"AT-4\"],\n  \"KSI-8\": [\"CP-9\", \"CP-10\", \"CP-6\", \"CP-7\"],\n  \"KSI-9\": [\"AU-2\", \"AU-3\", \"AU-6\", \"AU-12\"],\n  \"KSI-10\": [\"CM-2\", \"CM-3\", \"CM-6\", \"CM-8\"]\n};\n\n// KSI titles and descriptions\nexport const ksiDefinitions = {\n  \"KSI-1\": {\n    title: \"Continuous Vulnerability Scanning\",\n    description: \"Implement continuous scanning for vulnerabilities in the system and hosted applications.\"\n  },\n  \"KSI-2\": {\n    title: \"Multi-Factor Authentication\",\n    description: \"Implement multi-factor authentication for all users and privileged accounts.\"\n  },\n  \"KSI-3\": {\n    title: \"Automated Patching\",\n    description: \"Implement automated patching for operating systems and applications.\"\n  },\n  \"KSI-4\": {\n    title: \"Access Control Reviews\",\n    description: \"Perform regular reviews of user access to system resources.\"\n  },\n  \"KSI-5\": {\n    title: \"Security Incident Detection and Response\",\n    description: \"Implement automated security incident detection and response procedures.\"\n  },\n  \"KSI-6\": {\n    title: \"Data Encryption\",\n    description: \"Implement encryption for data at rest and in transit.\"\n  },\n  \"KSI-7\": {\n    title: \"Security Awareness Training\",\n    description: \"Conduct regular security awareness training for all personnel.\"\n  },\n  \"KSI-8\": {\n    title: \"Backup and Recovery\",\n    description: \"Implement regular data backup and recovery procedures.\"\n  },\n  \"KSI-9\": {\n    title: \"Logging and Monitoring\",\n    description: \"Implement comprehensive logging and monitoring of system activities.\"\n  },\n  \"KSI-10\": {\n    title: \"Configuration Management\",\n    description: \"Implement configuration management for all system components.\"\n  }\n};\n\n// Function to get NIST controls for a KSI\nexport const getNistControlsForKsi = ksiId => {\n  return ksiToControlsMap[ksiId] || [];\n};\n\n// Function to get all KSIs that map to a NIST control\nexport const getKsisForNistControl = controlId => {\n  return Object.keys(ksiToControlsMap).filter(ksiId => ksiToControlsMap[ksiId].includes(controlId));\n};\n\n// Control Family names for NIST 800-53\nexport const controlFamilies = {\n  \"AC\": \"Access Control\",\n  \"AT\": \"Awareness and Training\",\n  \"AU\": \"Audit and Accountability\",\n  \"CA\": \"Assessment, Authorization, and Monitoring\",\n  \"CM\": \"Configuration Management\",\n  \"CP\": \"Contingency Planning\",\n  \"IA\": \"Identification and Authentication\",\n  \"IR\": \"Incident Response\",\n  \"MA\": \"Maintenance\",\n  \"MP\": \"Media Protection\",\n  \"PE\": \"Physical and Environmental Protection\",\n  \"PL\": \"Planning\",\n  \"PS\": \"Personnel Security\",\n  \"RA\": \"Risk Assessment\",\n  \"SA\": \"System and Services Acquisition\",\n  \"SC\": \"System and Communications Protection\",\n  \"SI\": \"System and Information Integrity\"\n};\n\n// Get the family name for a control\nexport const getControlFamily = controlId => {\n  const family = controlId.split('-')[0];\n  return controlFamilies[family] || \"Unknown Family\";\n};\n\n// Get a list of all unique NIST controls across all KSIs\nexport const getAllNistControls = () => {\n  const controlSet = new Set();\n  Object.values(ksiToControlsMap).forEach(controls => {\n    controls.forEach(control => controlSet.add(control));\n  });\n  return Array.from(controlSet).sort();\n};\n\n// Get a friendly name for a KSI\nexport const getKsiTitle = ksiId => {\n  var _ksiDefinitions$ksiId;\n  return ((_ksiDefinitions$ksiId = ksiDefinitions[ksiId]) === null || _ksiDefinitions$ksiId === void 0 ? void 0 : _ksiDefinitions$ksiId.title) || ksiId;\n};\n\n// Mapping of NIST 800-53 Controls to KSIs (inverse of ksiToControlsMap)\nconst controlToKsiMap = {};\nObject.entries(ksiToControlsMap).forEach(([ksi, controls]) => {\n  controls.forEach(control => {\n    if (!controlToKsiMap[control]) {\n      controlToKsiMap[control] = [];\n    }\n    controlToKsiMap[control].push(ksi);\n  });\n});\n\n// Validate if a system meets a specific KSI\nexport const validateKsi = (ksiId, systemData) => {\n  // This would contain actual validation logic based on system data\n  // For now, returning mock results\n  const mockResults = {\n    \"KSI-1\": {\n      passed: true,\n      details: \"Vulnerability scanning is implemented and running daily.\"\n    },\n    \"KSI-2\": {\n      passed: true,\n      details: \"MFA is enabled for all accounts.\"\n    },\n    \"KSI-3\": {\n      passed: false,\n      details: \"Automated patching is not fully implemented.\"\n    },\n    \"KSI-4\": {\n      passed: true,\n      details: \"Access reviews are conducted quarterly.\"\n    },\n    \"KSI-5\": {\n      passed: true,\n      details: \"Incident response procedures are in place.\"\n    },\n    \"KSI-6\": {\n      passed: true,\n      details: \"Encryption is implemented for all data.\"\n    },\n    \"KSI-7\": {\n      passed: false,\n      details: \"Training program is not meeting requirements.\"\n    },\n    \"KSI-8\": {\n      passed: true,\n      details: \"Backup procedures are implemented and tested.\"\n    },\n    \"KSI-9\": {\n      passed: true,\n      details: \"Logging and monitoring systems are in place.\"\n    },\n    \"KSI-10\": {\n      passed: false,\n      details: \"Configuration management is partially implemented.\"\n    }\n  };\n  return mockResults[ksiId] || {\n    passed: false,\n    details: \"KSI not evaluated.\"\n  };\n};","map":{"version":3,"names":["ksiToControlsMap","ksiDefinitions","title","description","getNistControlsForKsi","ksiId","getKsisForNistControl","controlId","Object","keys","filter","includes","controlFamilies","getControlFamily","family","split","getAllNistControls","controlSet","Set","values","forEach","controls","control","add","Array","from","sort","getKsiTitle","_ksiDefinitions$ksiId","controlToKsiMap","entries","ksi","push","validateKsi","systemData","mockResults","passed","details"],"sources":["/Users/ryangutwein/Desktop/Repos/fedramp-ksi-validation/dashboard/src/services/mappingService.js"],"sourcesContent":["// Mapping of KSIs to NIST 800-53 controls\nexport const ksiToControlsMap = {\n  \"KSI-1\": [\"RA-5\", \"SI-3\", \"SI-7\", \"CA-8\"],\n  \"KSI-2\": [\"IA-2\", \"IA-5\", \"AC-2\", \"AC-3\"],\n  \"KSI-3\": [\"SI-2\", \"CM-7\", \"CM-8\", \"MA-6\"],\n  \"KSI-4\": [\"AC-2\", \"AC-6\", \"AC-17\", \"AC-24\"],\n  \"KSI-5\": [\"IR-4\", \"IR-5\", \"IR-6\", \"AU-6\"],\n  \"KSI-6\": [\"SC-8\", \"SC-12\", \"SC-13\", \"SC-28\"],\n  \"KSI-7\": [\"AT-1\", \"AT-2\", \"AT-3\", \"AT-4\"],\n  \"KSI-8\": [\"CP-9\", \"CP-10\", \"CP-6\", \"CP-7\"],\n  \"KSI-9\": [\"AU-2\", \"AU-3\", \"AU-6\", \"AU-12\"],\n  \"KSI-10\": [\"CM-2\", \"CM-3\", \"CM-6\", \"CM-8\"]\n};\n\n// KSI titles and descriptions\nexport const ksiDefinitions = {\n  \"KSI-1\": {\n    title: \"Continuous Vulnerability Scanning\",\n    description: \"Implement continuous scanning for vulnerabilities in the system and hosted applications.\",\n  },\n  \"KSI-2\": {\n    title: \"Multi-Factor Authentication\",\n    description: \"Implement multi-factor authentication for all users and privileged accounts.\",\n  },\n  \"KSI-3\": {\n    title: \"Automated Patching\",\n    description: \"Implement automated patching for operating systems and applications.\",\n  },\n  \"KSI-4\": {\n    title: \"Access Control Reviews\",\n    description: \"Perform regular reviews of user access to system resources.\",\n  },\n  \"KSI-5\": {\n    title: \"Security Incident Detection and Response\",\n    description: \"Implement automated security incident detection and response procedures.\",\n  },\n  \"KSI-6\": {\n    title: \"Data Encryption\",\n    description: \"Implement encryption for data at rest and in transit.\",\n  },\n  \"KSI-7\": {\n    title: \"Security Awareness Training\",\n    description: \"Conduct regular security awareness training for all personnel.\",\n  },\n  \"KSI-8\": {\n    title: \"Backup and Recovery\",\n    description: \"Implement regular data backup and recovery procedures.\",\n  },\n  \"KSI-9\": {\n    title: \"Logging and Monitoring\",\n    description: \"Implement comprehensive logging and monitoring of system activities.\",\n  },\n  \"KSI-10\": {\n    title: \"Configuration Management\",\n    description: \"Implement configuration management for all system components.\",\n  }\n};\n\n// Function to get NIST controls for a KSI\nexport const getNistControlsForKsi = (ksiId) => {\n  return ksiToControlsMap[ksiId] || [];\n};\n\n// Function to get all KSIs that map to a NIST control\nexport const getKsisForNistControl = (controlId) => {\n  return Object.keys(ksiToControlsMap).filter(ksiId => \n    ksiToControlsMap[ksiId].includes(controlId)\n  );\n};\n\n// Control Family names for NIST 800-53\nexport const controlFamilies = {\n  \"AC\": \"Access Control\",\n  \"AT\": \"Awareness and Training\",\n  \"AU\": \"Audit and Accountability\",\n  \"CA\": \"Assessment, Authorization, and Monitoring\",\n  \"CM\": \"Configuration Management\",\n  \"CP\": \"Contingency Planning\",\n  \"IA\": \"Identification and Authentication\",\n  \"IR\": \"Incident Response\",\n  \"MA\": \"Maintenance\",\n  \"MP\": \"Media Protection\",\n  \"PE\": \"Physical and Environmental Protection\",\n  \"PL\": \"Planning\",\n  \"PS\": \"Personnel Security\",\n  \"RA\": \"Risk Assessment\",\n  \"SA\": \"System and Services Acquisition\",\n  \"SC\": \"System and Communications Protection\",\n  \"SI\": \"System and Information Integrity\"\n};\n\n// Get the family name for a control\nexport const getControlFamily = (controlId) => {\n  const family = controlId.split('-')[0];\n  return controlFamilies[family] || \"Unknown Family\";\n};\n\n// Get a list of all unique NIST controls across all KSIs\nexport const getAllNistControls = () => {\n  const controlSet = new Set();\n  Object.values(ksiToControlsMap).forEach(controls => {\n    controls.forEach(control => controlSet.add(control));\n  });\n  return Array.from(controlSet).sort();\n};\n\n// Get a friendly name for a KSI\nexport const getKsiTitle = (ksiId) => {\n  return ksiDefinitions[ksiId]?.title || ksiId;\n};\n\n// Mapping of NIST 800-53 Controls to KSIs (inverse of ksiToControlsMap)\nconst controlToKsiMap = {};\nObject.entries(ksiToControlsMap).forEach(([ksi, controls]) => {\n  controls.forEach(control => {\n    if (!controlToKsiMap[control]) {\n      controlToKsiMap[control] = [];\n    }\n    controlToKsiMap[control].push(ksi);\n  });\n});\n\n// Validate if a system meets a specific KSI\nexport const validateKsi = (ksiId, systemData) => {\n  // This would contain actual validation logic based on system data\n  // For now, returning mock results\n  const mockResults = {\n    \"KSI-1\": { passed: true, details: \"Vulnerability scanning is implemented and running daily.\" },\n    \"KSI-2\": { passed: true, details: \"MFA is enabled for all accounts.\" },\n    \"KSI-3\": { passed: false, details: \"Automated patching is not fully implemented.\" },\n    \"KSI-4\": { passed: true, details: \"Access reviews are conducted quarterly.\" },\n    \"KSI-5\": { passed: true, details: \"Incident response procedures are in place.\" },\n    \"KSI-6\": { passed: true, details: \"Encryption is implemented for all data.\" },\n    \"KSI-7\": { passed: false, details: \"Training program is not meeting requirements.\" },\n    \"KSI-8\": { passed: true, details: \"Backup procedures are implemented and tested.\" },\n    \"KSI-9\": { passed: true, details: \"Logging and monitoring systems are in place.\" },\n    \"KSI-10\": { passed: false, details: \"Configuration management is partially implemented.\" },\n  };\n  \n  return mockResults[ksiId] || { passed: false, details: \"KSI not evaluated.\" };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}